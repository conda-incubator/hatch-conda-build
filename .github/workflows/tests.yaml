name: Test

on:
  pull_request:
    branches:
      - main
  merge_group:
  workflow_call:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.9", "3.10", "3.11", "3.12"]
        exclude:
           - os: "windows-latest"
             python: "3.9"
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python }} ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: test
          python-version: ${{ matrix.python }}

      - name: Install required packages
        shell: bash -el {0}
        run: |
          conda install git conda-build hatch pytest pip -c conda-forge
          pip install .[dev]

      - name: Conda info
        shell: bash -el {0}
        run: conda info

      - name: Conda list
        shell: bash -el {0}
        run: conda list

      - name: Run checks
        shell: bash -el {0}
        run: hatch env run -e test check

      - name: Run tests
        shell: bash -el {0}
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          pytest -vv

  build:
    runs-on: ubuntu-latest
    name: Build wheel
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install hatch
        run: |
          pip install hatch

      - name: Build and Distribute
        run: |
          hatch build

      - name: Upload the build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheel-${{ github.sha }}
          path: dist/*
          if-no-files-found: error
          retention-days: 7

  check:
    name: Check all tests passed
    if: always()
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether all required jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
